
interface Property {
  name: String!
  str: String!
  valueType: __Type!
}

type StringProperty implements Property {
  name: String!
  str: String!
  value: String
  valueType: __Type!
}

type IntProperty implements Property {
  name: String!
  str: String!
  value: Int
  valueType: __Type!
}

type FloatProperty implements Property {
  name: String!
  str: String!
  value: Float
  valueType: __Type!
}

type BooleanProperty implements Property {
  name: String!
  str: String!
  value: Boolean
  valueType: __Type!
}

type NullProperty implements Property {
  name: String!
  str: String!
  value: String
  valueType: __Type!
}

type StorageSizeProperty implements Property {
  name: String!
  str: String!
  value: StorageSize
  valueType: __Type!
}

enum StorageUnit {
  # single bytes
  B
  # 1 kilobyte = 1,000 bytes
  KB
  # 1 megabyte = 1,000,000 bytes
  MG
  # 1 gigabyte = 1e9 bytes (billion)
  GB
  # 1 terabyte = 1e12 bytes (trillion)
  TB
  # 1 petabyte = 1e15 bytes (quadrillion)
  PB
  # 1 exabyte = 1e18 bytes
  EB
  # 1 zettabyte = 1e21 bytes
  ZB
  # 1 yottabyte = 1e24 bytes
  YB
  # 1 kibibyte = 1024 bytes
  KiB
  # 1 mebibyte = 1024*1024 bytes
  MiB
  # 1 gibibyte = 1024^3 bytes
  GiB
  # 1 tebibyte = 1024^4 bytes
  TiB
  # 1 pebibyte = 1024^5 bytes
  PiB
  # 1 exbibyte = 1024^6 bytes
  EiB
  # 1 zebibyte = 1024^7 bytes
  ZiB
  # 1 yobibyte = 1024^8 bytes
  YiB
}

type StorageSize {
  value: Int!
  unit: StorageUnit!
  bytes: Float!
  scale: Float!
  str: String!
}

type Resource {
  id: ID!
  properties: [Property!]!
  prop(name: String!): Property
}

type ResourcePool {
  id: ID!
  name: String!
  resources: [Resource!]!
}

type Query {
  pools: [ResourcePool!]!
}
